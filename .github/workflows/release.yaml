name: Release

on:
  push:
    tags:
      - v*.*.*

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: zip
          MIME: application/x-zip-compressed
        rust:
          - stable

    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt

      #- uses: actions/cache@v2
      #  with:
      #    path: |
      #      D:\Craft
      #    key: ${{ runner.os }}-Craft-Install

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - name: Installing Qt5, KTextEditor & KImageFormats (Windows)
        if: matrix.os == 'windows-latest' && steps.cache.outputs.cache-hit != 'true'

        run: |
          $scriptPath = ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/Frodo45127/craft/master/setup/install_craft.ps1'))
          Invoke-Command -ScriptBlock ([scriptblock]::Create($scriptPath)) -ArgumentList "D:\Craft"
          D:\Craft\craft\craftenv.ps1
          craft -i --ci-mode qtimageformats
          craft -i --ci-mode ktexteditor
          craft -i --ci-mode kimageformats
        shell: pwsh

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'

        run: |
          D:\Craft\craft\craftenv.ps1
          cd D:/a/rpfm/rpfm
          cargo build --release --bin rpfm
          cargo build --release --bin rpfm_cli
          cargo build --release --bin rpfm_mod_checker
          cargo build --release --bin rpfm_ui
        shell: pwsh

      - name: Prepare Assets for Release (Windows)
        if: matrix.os == 'windows-latest'

        run: |
          cd D:\
          mkdir deploy
          cd deploy
          mkdir rpfm-release-assets
          cd rpfm-release-assets

          # Here we copy all the dlls required by RPFM. Otherwise we'll have to manually update them on every freaking release, and for 2 months that's been a royal PITA.
          mkdir iconengines
          cp D:\Craft\plugins\iconengines\KIconEnginePlugin.dll D:\deploy\rpfm-release-assets\iconengines\
          cp D:\Craft\plugins\iconengines\qsvgicon.dll D:\deploy\rpfm-release-assets\iconengines\

          mkdir imageformats
          cp D:\Craft\plugins\imageformats\*.dll D:\deploy\rpfm-release-assets\imageformats\
          cp D:/a/rpfm/rpfm/libs/qdds.dll D:\deploy\rpfm-release-assets\imageformats\

          mkdir platforms
          cp D:\Craft\plugins\platforms\qwindows.dll D:\deploy\rpfm-release-assets\platforms\

          mkdir styles
          cp D:\Craft\plugins\styles\qwindowsvistastyle.dll D:\deploy\rpfm-release-assets\styles\

          cp D:\Craft\bin\d3dcompiler_47.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\git2.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\iconv.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\icudt??.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\icuin??.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\icuuc??.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\intl.dll D:\deploy\rpfm-release-assets\

          cp D:\Craft\bin\KF5Archive.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5Attica.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5AuthCore.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5Codecs.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5Completion.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5ConfigCore.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5ConfigGui.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5ConfigWidgets.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5CoreAddons.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5Crash.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5DBusAddons.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5GlobalAccel.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5GuiAddons.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5I18n.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5IconThemes.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5ItemViews.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5JobWidgets.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5KIOCore.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5KIOGui.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5KIOWidgets.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5Parts.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5Service.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5SonnetCore.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5SonnetUi.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5SyntaxHighlighting.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5TextEditor.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5TextWidgets.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5WidgetsAddons.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5WindowSystem.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\KF5XmlGui.dll D:\deploy\rpfm-release-assets\

          cp D:\Craft\bin\libcrypto*.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\libEGL.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\libGLESV2.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\liblzma.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\libpng16.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\libssl*.dll D:\deploy\rpfm-release-assets\

          cp D:\Craft\bin\msvcp140.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\msvcp140_1.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\msvcp140_2.dll D:\deploy\rpfm-release-assets\

          cp D:\Craft\bin\pcre.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\pcre2-16.dll D:\deploy\rpfm-release-assets\

          cp D:\Craft\bin\Qt5Core.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5DBus.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5Gui.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5Network.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5PrintSupport.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5Qml.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5Svg.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5TextToSpeech.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5Widgets.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\Qt5Xml.dll D:\deploy\rpfm-release-assets\

          cp D:\Craft\bin\vcruntime140.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\vcruntime140_1.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\zlib.dll D:\deploy\rpfm-release-assets\
          cp D:\Craft\bin\zstd.dll D:\deploy\rpfm-release-assets\

          # Here we copy files generated from the compilation.
          cp D:/a/rpfm/rpfm/target/release/rpfm.exe D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/target/release/rpfm.pdb D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/target/release/rpfm_ui.exe D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/target/release/rpfm_ui.pdb D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/target/release/rpfm_mod_checker.exe D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/target/release/rpfm_cli.exe D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/target/release/rpfm_cli.pdb D:\deploy\rpfm-release-assets

          # Here we copy assets from the repo.
          mkdir img
          mkdir locale
          cp D:/a/rpfm/rpfm/LICENSE D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/CHANGELOG.md D:\deploy\rpfm-release-assets
          cp D:/a/rpfm/rpfm/img/* D:\deploy\rpfm-release-assets\img\
          cp D:/a/rpfm/rpfm/locale/* D:\deploy\rpfm-release-assets\locale\
          7z a rpfm-${{ steps.get_version.outputs.VERSION }}-${{ matrix.TARGET }}.${{ matrix.EXTENSION }} .\**

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v1
        with:
          version: Unreleased
          path: ./CHANGELOG.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release beta ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.log_entry }}
          draft: true
          prerelease: true

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: D:/deploy/rpfm-release-assets/rpfm-${{ steps.get_version.outputs.VERSION }}-${{ matrix.TARGET }}.${{ matrix.EXTENSION }}
          asset_name: rpfm-${{ steps.get_version.outputs.VERSION }}-${{ matrix.TARGET }}.${{ matrix.EXTENSION }}
          asset_content_type: ${{ matrix.MIME }}
